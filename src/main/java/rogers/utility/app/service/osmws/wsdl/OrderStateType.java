//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.02.28 at 04:23:36 PM IST 
//


package rogers.utility.app.service.osmws.wsdl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OrderStateType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OrderStateType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="open.not_running.not_started"/&gt;
 *     &lt;enumeration value="open.not_running.suspended"/&gt;
 *     &lt;enumeration value="open.not_running.cancelled"/&gt;
 *     &lt;enumeration value="open.not_running.waiting_for_revision"/&gt;
 *     &lt;enumeration value="open.not_running.failed"/&gt;
 *     &lt;enumeration value="open.not_running.waiting"/&gt;
 *     &lt;enumeration value="open.running.in_progress"/&gt;
 *     &lt;enumeration value="open.running.compensating.amending"/&gt;
 *     &lt;enumeration value="open.running.compensating.cancelling"/&gt;
 *     &lt;enumeration value="closed.completed"/&gt;
 *     &lt;enumeration value="closed.aborted"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "OrderStateType")
@XmlEnum
public enum OrderStateType {


    /**
     *       Order is in the creation task
     * 
     */
    @XmlEnumValue("open.not_running.not_started")
    OPEN_NOT_RUNNING_NOT_STARTED("open.not_running.not_started"),

    /**
     *       No work items in the order
     *                         can be processed.
     * 
     */
    @XmlEnumValue("open.not_running.suspended")
    OPEN_NOT_RUNNING_SUSPENDED("open.not_running.suspended"),

    /**
     *       Order is in the creation
     *                         task after having been      cancelled.
     * 
     */
    @XmlEnumValue("open.not_running.cancelled")
    OPEN_NOT_RUNNING_CANCELLED("open.not_running.cancelled"),

    /**
     *                         Order is
     *                         in the state where the fallout is resolved.
     * 
     */
    @XmlEnumValue("open.not_running.waiting_for_revision")
    OPEN_NOT_RUNNING_WAITING_FOR_REVISION("open.not_running.waiting_for_revision"),

    /**
     *                         Order is
     *                         in a fallout.
     * 
     */
    @XmlEnumValue("open.not_running.failed")
    OPEN_NOT_RUNNING_FAILED("open.not_running.failed"),

    /**
     *                         Order is
     *                         in waiting.
     * 
     */
    @XmlEnumValue("open.not_running.waiting")
    OPEN_NOT_RUNNING_WAITING("open.not_running.waiting"),

    /**
     *       Order has at least one work
     *                         item in a live      thread
     * 
     */
    @XmlEnumValue("open.running.in_progress")
    OPEN_RUNNING_IN_PROGRESS("open.running.in_progress"),

    /**
     *       Order is being compensated
     *                         for an amendment      order. Work items are
     *                         being undone or redone as      necessary to
     *                         compensate for the amendment.
     * 
     */
    @XmlEnumValue("open.running.compensating.amending")
    OPEN_RUNNING_COMPENSATING_AMENDING("open.running.compensating.amending"),

    /**
     *       Order is being compensated
     *                         for a cancel request.      All completed work
     *                         items are being undone
     * 
     */
    @XmlEnumValue("open.running.compensating.cancelling")
    OPEN_RUNNING_COMPENSATING_CANCELLING("open.running.compensating.cancelling"),

    /**
     *       All task on the order are complete
     * 
     */
    @XmlEnumValue("closed.completed")
    CLOSED_COMPLETED("closed.completed"),

    /**
     *                         The order
     *                         is aborted
     * 
     */
    @XmlEnumValue("closed.aborted")
    CLOSED_ABORTED("closed.aborted");
    private final String value;

    OrderStateType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OrderStateType fromValue(String v) {
        for (OrderStateType c: OrderStateType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
